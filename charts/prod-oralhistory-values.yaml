# Values file for oralhistoryprod
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/scientist-softserv/oral-history
  # changing this tag will cause a deploy via ArgoCD
  tag: ""
  pullPolicy: Always

# Chart documentation: https://github.com/bitnami/charts/tree/main/bitnami/solr
solr:
  # TODO: Solr heap size? docker-compose has SOLR_HEAP=4g
  enabled: true
  image:
    repository: bitnami/solr
    # This is the image version, not the chart version.
    tag: 8.11.1
  auth:
    enabled: true
    adminUsername: admin
    adminPassword: $SOLR_ADMIN_PASSWORD
  persistence:
    enabled: true
    storageClass: ""
    size: 8Gi
    mountPath: /bitnami/solr
# Chart documentation: https://github.com/bitnami/charts/tree/main/bitnami/postgresql
postgresql:
  enabled: true
  image:
    repository: bitnami/postgresql
    # This is the image version, not the chart version.
    tag: 12.3.0
  auth:
    username: blacklight
    database: blacklight
    password: $POSTGRES_PASSWORD
  service:
    ports:
      postgresql: 5432
  primary:
    persistence:
      # TODO: Should enabled be true?
      enabled: false
      size: 10Gi

env:
  configmap:
    MAKE_WAVES: "false"
  secret:
    ADMIN_EMAIL: $ADMIN_EMAIL
    ADMIN_PASSWORD: $ADMIN_PASSWORD
    NEGATIVE_CAPTCHA_SECRET: $NEGATIVE_CAPTCHA_SECRET
    SECRET_KEY_BASE: $SECRET_KEY_BASE

worker:
  replicaCount: 1
  image:
    repository: ghcr.io/scientist-softserv/oral-history
    tag: ""
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# externalsecrets:
#   annotations:
#     argocd.argoproj.io/sync-wave: "-3"
#   enabled: true
#   # Reference to ClusterSecretStore name
#   ref: systems-clustersecretstore
#   secrets:
#     application:
#       data:
#         - secretKey: NEGATIVE_CAPTCHA_SECRET
#           remoteRef:
#             key: /systems/prodrke01/oh-public/negative_captcha_secret
#         - secretKey: POSTGRES_PASSWORD
#           remoteRef:
#             key: /systems/prodrke01/oh-public/db_password
#         - secretKey: SECRET_KEY_BASE
#           remoteRef:
#             key: /systems/prodrke01/oh-public/secret_key_base
#         - secretKey: solr-admin-password
#           remoteRef:
#             key: /systems/prodrke01/oh-public/solr_admin_password

# configure a registry token for access to your container registry, needs read permissions, create secret in Rancher, follow instructions:
# https://ranchermanager.docs.rancher.com/v2.5/how-to-guides/new-user-guides/kubernetes-resources-setup/kubernetes-and-docker-registries#creating-a-registry
# replace registry-token below with the name of the secret you created in the Rancher UI
imagePullSecrets: []
  # - registry-token
fullnameOverride: "oral-history"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {
    traefik.ingress.kubernetes.io/router.entrypoints: web
  }
  hosts:
    - host: "oral-history.localhost"
      paths: ["/"]
  tls: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
