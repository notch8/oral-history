# Values file for oralhistoryprod
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: scientist-softserv/softserv-website/oral-history
  # changing this tag will cause a deploy via ArgoCD
  # We will set the tag dynamically in GitHub actions
  # tag: v0.0.3
  pullPolicy: Always

externalSolrHost: solr.staging-solr.svc.cluster.local
externalSolrUser: admin
externalSolrPassword: $SOLR_ADMIN_PASSWORD
externalSolrCollection: "oral-history-staging"

solr:
  enabled: false
  replicaCount: 1
  collectionReplicas: 1
  auth:
    enabled: true
    existingSecret: oral-history-staging-secrets
    existingSecretPasswordKey: SOLR_ADMIN_PASSWORD
  coreNames: oral-history-staging
  collection: oral-history-staging
  cloudBootstrap: true
  cloudEnabled: true
  persistence:
    enabled: true
  zookeeper:
    enabled: true
    persistence:
      enabled: true

postgresql:
  enabled: false
  auth:
    database: oral-history-staging
    password: $POSTGRES_PASSWORD
    username: postgres
  containerPorts:
    postgresql: 5432
  primary:
    service:
      ports:
        postgresql: 5432
  readReplicas:
    service:
      ports:
        postgresql: 5432

# TODO: Variable names and values were copied from .env - is this all right?
web:
  # Due to the current Helm template mechanism, any additional ENVs will have to be added in the oral-history-env ConfigMap template
  env:
    # Solr Environment Variables
    # The values should be matched with values used in the Solr Dependent Chart
    SOLR_ADMIN_USER: "admin"

    # DNS pointer to the Solr Service Name
    SOLR_HOST: "solr.staging-solr.svc.cluster.local"

    SOLR_PORT: "8983"

    # Postgres environment variables
    # The values should be matched with values used in the Postgre Dependent Chart
    POSTGRES_DB: "oral-history-staging"

    # DNS pointer to the Postgres Service Name
    POSTGRES_HOST: "pg-postgresql.staging-postgres.svc.cluster.local"

    # Rails specific environment variables
    MAKE_WAVES: "true"
    PASSENGER_APP_ENV: "production"
    RAILS_ENV: "production"
    RACK_ENV: "production"
    RAILS_LOG_TO_STDOUT: "true"
    # SMTP_ADDRESS: "smtp.ucla.edu"
    # SMTP_DOMAIN: "library.ucla.edu"
    # SMTP_FROM: "do-not-reply@library.ucla.edu"
    # SMTP_HOST: "oralhistory-stage.library.ucla.edu"
    # SMTP_HTTP_PROTOCOL: "https"
    USE_HTTP_BASIC: "true"

    SITE_URI: "oral-history-staging.notch8.cloud"

worker:
  replicaCount: 1
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

externalsecrets:
  enabled: true
  # Reference to ClusterSecretStore name
  ref: 1password-secretstore
  secrets:
    application:
      data:
        - secretKey: ROLLBAR_ACCESS_TOKEN
          remoteRef:
            key: op://Software Services Group/oral-history-secrets/staging-env/ROLLBAR_ACCESS_TOKEN
        - secretKey: NEGATIVE_CAPTCHA_SECRET
          remoteRef:
            key: op://Software Services Group/oral-history-secrets/staging-env/NEGATIVE_CAPTCHA_SECRET
        - secretKey: POSTGRES_PASSWORD
          remoteRef:
            key: op://Software Services Group/oral-history-secrets/staging-env/POSTGRES_PASSWORD
        - secretKey: POSTGRES_USER
          remoteRef:
            key: op://Software Services Group/oral-history-secrets/staging-env/POSTGRES_USER
        - secretKey: SECRET_KEY_BASE
          remoteRef:
            key: op://Software Services Group/oral-history-secrets/staging-env/SECRET_KEY_BASE
        - secretKey: SOLR_ADMIN_PASSWORD
          remoteRef:
            key: op://Software Services Group/oral-history-secrets/staging-env/SOLR_ADMIN_PASSWORD
        - secretKey: STAGING_HTTP_BASIC_PASSWORD
          remoteRef:
            key: op://Software Services Group/oral-history-secrets/staging-env/STAGING_HTTP_BASIC_PASSWORD
        - secretKey: STAGING_HTTP_BASIC_USERNAME
          remoteRef:
            key: op://Software Services Group/oral-history-secrets/staging-env/STAGING_HTTP_BASIC_USERNAME
        - secretKey: ADMIN_EMAIL
          remoteRef:
            key: op://Software Services Group/oral-history-secrets/staging-env/ADMIN_EMAIL
        - secretKey: ADMIN_PASSWORD
          remoteRef:
            key: op://Software Services Group/oral-history-secrets/staging-env/ADMIN_PASSWORD

imagePullSecrets:
  - github
fullnameOverride: "oral-history-staging"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: "true"
  ingressClassName: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: nginx
    kubernetes.io/tls-acme: "true"
    ## add prod issuer??
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  hosts:
    - host: oral-history-staging.notch8.cloud
      paths:
        - "/"
  tls:
   - secretName: oral-history-staging-tls
     hosts:
       - oral-history-staging.notch8.cloud


resources: {}

autoscaling:
  enabled: false

nodeSelector: {}

tolerations: []

affinity: {}
